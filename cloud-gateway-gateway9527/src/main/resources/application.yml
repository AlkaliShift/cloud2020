server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          #开启从注册中心动态创建路由的功能，利用微服务名进行路由
          enabled: true
      routes:
        #路由的ID，没有固定规则且要求唯一，建议配合服务名
        - id: payment_route
          #匹配后提供的路由地址
          #uri: http://localhost:8001
          #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          filters:
            #过滤器工厂会在匹配的请求头加上一对请求头，名称为X-Request-Id，值为1024
            - AddRequestParameter=X-Request-Id, 1024
          predicates:
            #断言，路径相匹配的进行路由（=号前后不允许有空格！！！）
            - Path=/payment/get/**
            #在以下时间之后允许访问
            - After=2020-09-03T16:35:55.674+08:00[Asia/Shanghai]
            #- Before = 2020-09-03T18:35:55.674+08:00[Asia/Shanghai]
            #- Between = 2020-09-03T16:35:55.674+08:00[Asia/Shanghai], 2020-09-03T18:35:55.674+08:00[Asia/Shanghai]
            #Cookie name: username; 正则表达式: wushenghui
            - Cookie=username, wushenghui
            #请求头要有X-Request-Id属性并且值为整数的正则表达式
            - Header=X-Request-Id, \d+
            #接收一组参数，一组匹配的域名列表，这个模板是一个ant分隔的模板，用.号作为分隔符。Host是Header中的一个属性。
            - Host=**.atguigu.com,**.somehost.org,**.anotherhost.org
            #方法级别
            - Method=GET
            #查询条件（参数名：?username=31）
            - Query=username, \d+

        - id: payment_route2
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/lb/**

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    #服务提供者provider注册进eureka服务列表内
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka
